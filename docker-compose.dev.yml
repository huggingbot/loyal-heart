version: "3"

services:
  cache:
    restart: always
    image: redis:7.2-alpine
    env_file:
      - ./.env.development
    ports:
      - "6379:6379"
    networks:
      - dev_network
  db:
    restart: always
    image: mysql:8.0
    env_file:
      - ./.env.development
    ports:
      - 3306:3306
    healthcheck:
      test: "mysql $$MYSQL_DATABASE -h db -P 3306 -u$$MYSQL_USER -p$$MYSQL_PASSWORD -e 'SELECT 1;'"
      start_period: 3s
      interval: 3s
      timeout: 10s
      retries: 10
    networks:
      - dev_network
  web:
    container_name: web
    build:
      context: .
      args:
        PORT: 3000
      dockerfile: ./apps/web/Dockerfile.dev
    restart: always
    env_file:
      - ./.env.development
    ports:
      - 3000:3000
    networks:
      - dev_network
    volumes:
      - .:/app
      - /app/node_modules/
  admin:
    container_name: admin
    build:
      context: .
      args:
        PORT: 3010
      dockerfile: ./apps/admin/Dockerfile.dev
    restart: always
    env_file:
      - ./.env.development
    ports:
      - 3010:3010
    networks:
      - dev_network
    volumes:
      - .:/app
      - /app/node_modules/
  api:
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      args:
        PORT: 3020
      dockerfile: ./apps/api/Dockerfile.dev
    restart: always
    env_file:
      - ./.env.development
    ports:
      - 3020:3020
    networks:
      - dev_network
    volumes:
      - .:/app
      - /app/node_modules/
  worker:
    container_name: worker
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      args:
        PORT: 3030
      dockerfile: ./apps/worker/Dockerfile.dev
    restart: always
    env_file:
      - ./.env.development
    ports:
      - 3030:3030
    networks:
      - dev_network
    volumes:
      - .:/app
      - /app/node_modules/

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  dev_network:
    external: true
